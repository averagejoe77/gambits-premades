{
  "name": "Bloodied But Unbowed",
  "type": "feat",
  "img": "icons/skills/wounds/injury-eyes-blood-red.webp",
  "system": {
    "description": {
      "value": "<p><em>Requires MidiQOL, DAE, Effect Macro</em></p><p>Starting at 3rd level, when you take damage that reduces you to half your maximum hit points or less, you can use your reaction to gain temporary hit points equal to your pugilist level + your Constitution modifier and regain all your expended moxie points.</p><hr /><p><em>Once you use this feature, you canâ€™t use it again until you finish a short or long rest.</em></p>",
      "chat": ""
    },
    "source": {
      "custom": "2.1.2",
      "revision": 1,
      "rules": "2014",
      "book": "",
      "page": "",
      "license": ""
    },
    "cover": null,
    "crewed": false,
    "uses": {
      "max": "1",
      "recovery": [
        {
          "period": "sr",
          "type": "recoverAll"
        }
      ],
      "spent": 0
    },
    "type": {
      "value": "",
      "subtype": ""
    },
    "properties": [],
    "requirements": "Pugilist 3",
    "activities": {
      "dnd5eactivity000": {
        "_id": "dnd5eactivity000",
        "type": "utility",
        "activation": {
          "type": "reaction",
          "value": 1,
          "condition": "false",
          "override": false
        },
        "consumption": {
          "targets": [
            {
              "type": "itemUses",
              "value": "1",
              "target": "",
              "scaling": {}
            }
          ],
          "scaling": {
            "allowed": false,
            "max": ""
          },
          "spellSlot": true
        },
        "description": {
          "chatFlavor": ""
        },
        "duration": {
          "concentration": false,
          "value": "",
          "units": "inst",
          "special": "",
          "override": false
        },
        "effects": [],
        "range": {
          "units": "self",
          "special": "",
          "override": false
        },
        "target": {
          "template": {
            "count": "",
            "contiguous": false,
            "type": "",
            "size": "",
            "width": "",
            "height": "",
            "units": "ft"
          },
          "affects": {
            "count": "",
            "type": "self",
            "choice": false,
            "special": ""
          },
          "prompt": true,
          "override": false
        },
        "uses": {
          "spent": 0,
          "max": "",
          "recovery": []
        },
        "roll": {
          "formula": "",
          "name": "",
          "prompt": false,
          "visible": false
        },
        "sort": 0,
        "name": "",
        "useConditionText": "",
        "useConditionReason": "",
        "effectConditionText": "",
        "macroData": {
          "name": "",
          "command": ""
        },
        "ignoreTraits": {
          "idi": false,
          "idr": false,
          "idv": false,
          "ida": false,
          "idm": false
        },
        "midiProperties": {
          "ignoreTraits": [],
          "triggeredActivityId": "none",
          "triggeredActivityConditionText": "",
          "triggeredActivityTargets": "targets",
          "triggeredActivityRollAs": "self",
          "autoConsume": false,
          "forceConsumeDialog": "default",
          "forceRollDialog": "default",
          "forceDamageDialog": "default",
          "confirmTargets": "default",
          "autoTargetType": "any",
          "autoTargetAction": "default",
          "automationOnly": false,
          "otherActivityCompatible": true,
          "otherActivityAsParentType": true,
          "identifier": "",
          "displayActivityName": false,
          "rollMode": "default",
          "chooseEffects": false,
          "toggleEffect": false,
          "ignoreFullCover": false,
          "removeChatButtons": "default",
          "magicEffect": false,
          "magicDamage": false,
          "noConcentrationCheck": false,
          "autoCEEffects": "default"
        },
        "isOverTimeFlag": false,
        "overTimeProperties": {
          "saveRemoves": true,
          "preRemoveConditionText": "",
          "postRemoveConditionText": ""
        },
        "otherActivityId": "none",
        "otherActivityAsParentType": true
      }
    },
    "identifier": "bloodied-but-unbowed",
    "enchant": {},
    "prerequisites": {
      "level": null,
      "items": [],
      "repeatable": false
    },
    "advancement": []
  },
  "effects": [
    {
      "name": "Bloodied But Unbowed",
      "origin": "Actor.GYQSLDNGWKsLCTOE.Item.B3WvqeJyAw8jd5Qi",
      "duration": {
        "startTime": 47433171441,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": 1,
        "startTurn": 1
      },
      "transfer": true,
      "disabled": false,
      "_id": "8WG0SZAhfHd9JSCL",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro,isDamaged",
          "priority": 20
        }
      ],
      "description": "",
      "statuses": [],
      "flags": {
        "times-up": {
          "isPassive": true
        },
        "dae": {
          "selfTarget": false,
          "selfTargetAlways": false,
          "stackable": "noneName",
          "showIcon": false,
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "disableIncapacitated": false,
          "dontApply": false
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": "",
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false,
          "nameOverride": "",
          "customCheck": "",
          "wallsBlock": "system"
        }
      },
      "tint": "#ffffff",
      "img": "icons/skills/wounds/injury-eyes-blood-red.webp",
      "type": "base",
      "system": {},
      "sort": 0,
      "_key": "!items.effects!2hIGowCxQJ68BQhi.8WG0SZAhfHd9JSCL"
    }
  ],
  "folder": "4OzV9QdsPgTyK99q",
  "flags": {
    "midi-qol": {
      "effectActivation": false,
      "rollAttackPerTarget": "default",
      "removeAttackDamageButtons": "default",
      "itemCondition": "",
      "reactionCondition": "false",
      "effectCondition": "",
      "onUseMacroName": ""
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "rollOther": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "ignoreTotalCover": false,
      "confirmTargets": "default",
      "noConcentrationCheck": false
    },
    "dnd5e": {
      "sourceId": "Compendium.world.pugilist-class.Item.AclO1ro8VTMy5YnM",
      "advancementOrigin": "lRflwN3N2u4styuf.zcxmwKII7B2eQ9W6",
      "riders": {
        "activity": [],
        "effect": []
      },
      "migratedUses": 1
    },
    "autoanimations": {
      "id": "07bc8aca-9241-402e-a5be-ecaa92c873e1",
      "label": "Bloodied But Unbowed",
      "levels3d": {
        "type": "explosion",
        "data": {
          "color01": "#FFFFFF",
          "color02": "#FFFFFF",
          "spritePath": "modules/levels-3d-preview/assets/particles/dust.png"
        },
        "sound": {
          "enable": false
        },
        "secondary": {
          "enable": false,
          "data": {
            "color01": "#FFFFFF",
            "color02": "#FFFFFF",
            "spritePath": "modules/levels-3d-preview/assets/particles/dust.png"
          }
        }
      },
      "macro": {
        "enable": false,
        "playWhen": "0"
      },
      "menu": "ontoken",
      "primary": {
        "video": {
          "dbSection": "static",
          "menuType": "generic",
          "animation": "outpulse",
          "variant": "02",
          "color": "whiteblue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": true,
          "anchor": "0.5",
          "contrast": 1,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "isWait": false,
          "opacity": 1,
          "persistent": false,
          "playbackRate": 2,
          "playOn": "default",
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1.5,
          "tint": true,
          "tintColor": "#ccd9ff",
          "unbindAlpha": false,
          "unbindVisibility": false,
          "zIndex": 1,
          "saturation": 1
        }
      },
      "secondary": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": true,
          "isWait": false,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1.5,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "soundOnly": {
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        }
      },
      "source": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "isWait": true,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "target": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "opacity": 1,
          "persistent": false,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "unbindAlpha": false,
          "unbindVisibility": false,
          "zIndex": 1
        }
      },
      "isEnabled": true,
      "isCustomized": true,
      "fromAmmo": false,
      "version": 5
    },
    "itemacro": {
      "macro": {
        "name": "Bloodied But Unbowed",
        "type": "script",
        "scope": "global",
        "command": "const reactionItemName = \"Bloodied But Unbowed\";  //put the reaction Item's name here, inside the quotes.\n\nconst { [0]:{ actor:rollingActor, workflow: { item: rollingItem, damageItem }, macroPass, options:{actor:reactionActor} } } = args ?? {};\n\nif(!macroPass) return ui.notifications.error(`${reactionItemName} macro error. Do you have sheet hooks options enabled in Item Macro's module settings? If yes please turn it off or complain to thatlonelybugbear!`);\n\n\nif (macroPass == \"isDamaged\") {\n    const hasUsedReaction = await MidiQOL.hasUsedReaction(reactionActor);  \n    if (!hasUsedReaction && damageItem.newHP < Math.floor(reactionActor.system.attributes.hp.max/2)) {\n        const reactionItem = reactionActor?.items.getName(reactionItemName);\n        const activation = deepClone(reactionItem.system.activation);\n        activation.type = \"reactiondamage\";\n        return reactionItem.update({\"system.activation\":activation});\n    }\n    else return reactionItem.update({\"system.activation\":\"reactionmanual\"});\n}",
        "author": "gJx0mDGhV3S5A3G6",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "core": {},
    "dae": {
      "macro": {
        "name": "Bloodied But Unbowed",
        "img": "icons/skills/wounds/injury-eyes-blood-red.webp",
        "type": "script",
        "scope": "global",
        "command": "if(args[0].macroPass === \"isDamaged\") {\n    if(MidiQOL.hasUsedReaction(actor)) return;\n    if(macroItem.system.uses.value === 0) return;\n    if ((actor.system.attributes.hp.value - workflow.damageTotal) > (actor.system.attributes.hp.max / 2)) return console.log(\"Bloodied but Unbowed: Actor has more than half their max HP.\");\n    async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\n    if(!actor.classes.pugilist) return console.log(\"Bloodied but Unbowed: Actor does not have a pugilist class.\");\n    const tempHp = actor.classes.pugilist.system.levels + actor.system.abilities.con.mod;\n    const moxie = actor.items.getName(\"Moxie\");\n    const moxieMax = moxie.system.uses.max;\n\n    let initialTimeLeft = 15;\n    let dialogId = \"bloodiedbutunbowed\";\n    const dialogTitlePrimary = `${actor.name} | ${macroItem.name}`;\n    const dialogTitleGM = `Waiting for ${actor.name}'s selection | ${macroItem.name}`;\n    let browserUser = game.gps.getBrowserUser({ actorUuid: actor.uuid });\n    let gmUser = game.gps.getPrimaryGM();\n    let result;\n\n    let dialogContent = `\n        <div class=\"gps-dialog-container\">\n            <div class=\"gps-dialog-section\">\n                <div class=\"gps-dialog-content\">\n                    <div>\n                        <div class=\"gps-dialog-flex\">\n                            <p class=\"gps-dialog-paragraph\">Would you like to use ${macroItem.name} to gain Temporary Hit Points and reset your Moxie charges?</p>\n                            <div id=\"image-container\" class=\"gps-dialog-image-container\">\n                                <img id=\"img_${dialogId}\" src=\"${macroItem.img}\" class=\"gps-dialog-image\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"gps-dialog-button-container\">\n                <button id=\"pauseButton_${dialogId}\" type=\"button\" class=\"gps-dialog-button\">\n                    <i class=\"fas fa-pause\" id=\"pauseIcon_${dialogId}\" style=\"margin-right: 5px;\"></i>Pause\n                </button>\n            </div>\n        </div>\n    `;\n\n    if (MidiQOL.safeGetGameSetting('gambits-premades', 'Mirror 3rd Party Dialog for GMs') && browserUser !== gmUser) {\n    let userDialogArgs = { dialogTitle:dialogTitlePrimary,dialogContent,dialogId,initialTimeLeft,validTokenPrimaryUuid: token.document.uuid,source: \"user\",type: \"multiDialog\", browserUser: browserUser };\n\n    let gmDialogArgs = { dialogTitle:dialogTitleGM,dialogContent,dialogId,initialTimeLeft,validTokenPrimaryUuid: token.document.uuid,source: \"gm\",type: \"multiDialog\" };\n\n    result = await game.gps.socket.executeAsUser(\"handleDialogPromises\", gmUser, {userDialogArgs, gmDialogArgs});\n    } else {\n    result = await game.gps.socket.executeAsUser(\"process3rdPartyReactionDialog\", browserUser, {dialogTitle:dialogTitlePrimary,dialogContent,dialogId,initialTimeLeft,validTokenPrimaryUuid: token.document.uuid,source:gmUser === browserUser ? \"gm\" : \"user\",type:\"singleDialog\"});\n    }\n            \n    const { userDecision, enemyTokenUuid, allyTokenUuid, damageChosen, abilityCheck, source, type } = result;\n\n    if (userDecision) {\n        await actor.update({\"system.attributes.hp.temp\": tempHp});\n        await moxie.update({\"system.uses.value\": moxieMax});\n        await macroItem.update({\"system.uses.value\": itemData.system.uses.value - 1});\n\n        let actorPlayer = MidiQOL.playerForActor(actor);\n        let chatData = {\n            user: actorPlayer.id,\n            speaker: ChatMessage.getSpeaker({ token: token }),\n            content: `${actor.name} used Bloodied But Unbowed which gave them ${tempHp} temporary hit points and reset their Moxie charges to ${moxieMax}.`\n        };\n        ChatMessage.create(chatData);\n\n        if (!MidiQOL.hasUsedReaction(actor)) {\n            await game.gps.socket.executeAsUser(\"addReaction\", gmUser, {actorUuid: actor.uuid})\n        }\n    }\n}",
        "author": "roRDywD19pu2VxlC",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": "dnd5e",
          "systemVersion": "3.3.1",
          "coreVersion": "12.331",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    },
    "scene-packer": {
      "hash": "fd10a8ae6a4ed505780cf8f47ad434b99273ee1f",
      "sourceId": "Item.x5X2f7Ne20pKwO0J"
    },
    "tidy5e-sheet": {
      "favorite": true
    },
    "link-item-resource-5e": {
      "resource-link": ""
    },
    "magicitems": {
      "enabled": false,
      "default": "",
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "walledtemplates": {
      "wallsBlock": "globalDefault",
      "wallRestriction": "globalDefault"
    },
    "LocknKey": {
      "IDKeysFlag": "",
      "RemoveKeyonUseFlag": false,
      "LPFormulaFlag": "",
      "LPFormulaOverrideFlag": false,
      "LBFormulaFlag": "",
      "LBFormulaOverrideFlag": false,
      "ReplacementItemFlag": ""
    }
  },
  "_id": "2hIGowCxQJ68BQhi",
  "_key": "!items!2hIGowCxQJ68BQhi"
}
