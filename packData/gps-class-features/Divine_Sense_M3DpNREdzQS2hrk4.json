{
  "name": "Divine Sense",
  "type": "feat",
  "system": {
    "description": {
      "value": "<p><em>Requires Vision5e, Active Token Effects</em></p>",
      "chat": ""
    },
    "source": {
      "custom": "1.0.1",
      "revision": 1,
      "rules": "2014"
    },
    "cover": null,
    "crewed": false,
    "uses": {
      "max": "1 + @abilities.cha.mod",
      "recovery": [
        {
          "period": "lr",
          "type": "recoverAll"
        }
      ],
      "spent": 0
    },
    "type": {
      "value": "class",
      "subtype": ""
    },
    "requirements": "",
    "prerequisites": {
      "level": null,
      "items": [],
      "repeatable": false
    },
    "properties": [],
    "activities": {
      "dnd5eactivity000": {
        "_id": "dnd5eactivity000",
        "type": "utility",
        "activation": {
          "type": "action",
          "value": 1,
          "condition": "",
          "override": false
        },
        "consumption": {
          "targets": [
            {
              "type": "itemUses",
              "value": "1",
              "target": "",
              "scaling": {}
            }
          ],
          "scaling": {
            "allowed": false,
            "max": ""
          },
          "spellSlot": true
        },
        "description": {
          "chatFlavor": ""
        },
        "duration": {
          "concentration": false,
          "value": "",
          "units": "inst",
          "special": "",
          "override": false
        },
        "effects": [],
        "range": {
          "value": "60",
          "units": "ft",
          "special": "",
          "override": false
        },
        "target": {
          "template": {
            "count": "",
            "contiguous": false,
            "type": "",
            "size": "",
            "width": "",
            "height": "",
            "units": "ft"
          },
          "affects": {
            "count": "",
            "type": "",
            "choice": false,
            "special": ""
          },
          "prompt": true,
          "override": false
        },
        "uses": {
          "spent": 0,
          "max": "",
          "recovery": []
        },
        "roll": {
          "formula": "",
          "name": "",
          "prompt": false,
          "visible": false
        },
        "sort": 0,
        "name": "",
        "useConditionText": "",
        "useConditionReason": "",
        "effectConditionText": "",
        "macroData": {
          "name": "",
          "command": ""
        },
        "ignoreTraits": {
          "idi": false,
          "idr": false,
          "idv": false,
          "ida": false,
          "idm": false
        },
        "midiProperties": {
          "ignoreTraits": [],
          "triggeredActivityId": "none",
          "triggeredActivityConditionText": "",
          "triggeredActivityTargets": "targets",
          "triggeredActivityRollAs": "self",
          "autoConsume": false,
          "forceConsumeDialog": "default",
          "forceRollDialog": "default",
          "forceDamageDialog": "default",
          "confirmTargets": "default",
          "autoTargetType": "any",
          "autoTargetAction": "default",
          "automationOnly": false,
          "otherActivityCompatible": true,
          "otherActivityAsParentType": true,
          "identifier": "",
          "displayActivityName": false,
          "rollMode": "default",
          "chooseEffects": false,
          "toggleEffect": false,
          "ignoreFullCover": false,
          "removeChatButtons": "default",
          "magicEffect": false,
          "magicDamage": false,
          "noConcentrationCheck": false,
          "autoCEEffects": "default"
        },
        "isOverTimeFlag": false,
        "overTimeProperties": {
          "saveRemoves": true,
          "preRemoveConditionText": "",
          "postRemoveConditionText": ""
        },
        "otherActivityId": "none",
        "otherActivityAsParentType": true
      }
    },
    "identifier": "divine-sense",
    "enchant": {},
    "advancement": []
  },
  "flags": {
    "ddbimporter": {
      "id": "1026",
      "entityTypeId": "222216831",
      "componentId": 260,
      "componentTypeId": 12168134,
      "type": "class",
      "class": "Paladin",
      "subclass": "Oath of Conquest",
      "dndbeyond": {
        "levelScale": null,
        "levelScales": [],
        "limitedUse": [
          {
            "level": null,
            "uses": 1
          }
        ]
      },
      "importId": "M0brEkdGfGMah5nH",
      "pack": "world.ddb-spelljammer-adventures-in-space-ddb-override",
      "originalItemName": "Divine Sense",
      "replaced": true
    },
    "infusions": {
      "infused": false
    },
    "obsidian": {
      "source": {
        "type": "class",
        "text": "Paladin"
      }
    },
    "link-item-resource-5e": {
      "resource-link": "secondary"
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]function.game.gps.divineSense",
      "rollAttackPerTarget": "default",
      "itemCondition": "",
      "effectCondition": "",
      "removeAttackDamageButtons": "default",
      "reactionCondition": "",
      "otherCondition": ""
    },
    "itemacro": {
      "macro": {
        "name": "Divine Sense",
        "type": "script",
        "scope": "global",
        "command": "// Midi-qol \"On Use\", Item Macro. Remove all targeting details, this handles everything.\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nlet paladin = canvas.tokens.get(args[0].tokenId);\nlet itemD = args[0].item;\nlet distance = itemD.system.range.value =! null ? itemD.system.range.value : 60;\nlet targets = MidiQOL.findNearby(null, paladin, distance, {maxSize: CONFIG.DND5E.tokenSizes.grg});\nlet totalCount = [];\nlet is_good = [];\nlet is_evil = [];\nlet is_celestial = [];\nlet is_fiend = [];\nlet is_undead = [];\ntargets.reduce((list, target) => {\n    if(([\"good\", \"evil\"].some(i => (target.actor.system.details.alignment).toLowerCase().includes(i)) && [\"celestial\",\"fiend\",\"undead\"].some(i => (target.actor.type === \"character\" ? target.actor.system.details.race : target.actor.system.details.type.value).toLowerCase().includes(i))) || ([\"good\", \"evil\"].some(i => (target.actor.system.details.alignment).toLowerCase().includes(i))) || ([\"celestial\",\"fiend\",\"undead\"].some(i => (target.actor.type === \"character\" ? target.actor.system.details.race : target.actor.system.details.type.value).toLowerCase().includes(i)))) totalCount.push(target);    \n    if([\"good\"].some(i => (target.actor.system.details.alignment).toLowerCase().includes(i))) is_good.push(target);\n    if([\"evil\"].some(i => (target.actor.system.details.alignment).toLowerCase().includes(i))) is_evil.push(target);\n    if((target.actor.type === \"character\" ? target.actor.system.details.race : target.actor.system.details.type.value).toLowerCase().includes(\"celestial\")) is_celestial.push(target);\n    if((target.actor.type === \"character\" ? target.actor.system.details.race : target.actor.system.details.type.value).toLowerCase().includes(\"fiend\")) is_fiend.push(target);\n    if((target.actor.type === \"character\" ? target.actor.system.details.race : target.actor.system.details.type.value).toLowerCase().includes(\"undead\")) is_undead.push(target);\n    return list;\n}, []);\n\nawait wait(300);\nlet the_message = `<table border=\"1\" style=\"text-align:center;\"><thead><tr><th>Type</th><th>Found</th></tr></thead><tbody><tr><td>Undead</td><td>${is_undead.length}</td></tr><tr><td>Fiends</td><td>${is_fiend.length}</td></tr><tr><td>Celestials</td><td>${is_celestial.length}</td></tr><tr><td>Good Alignment</td><td>${is_good.length}</td></tr><tr><td>Evil Alignment</td><td>${is_evil.length}</td></tr></tbody><tbody style=\"background: rgba(0, 0, 0, 0.5);color: #f0f0e0;text-shadow: 1px 1px #000;border-bottom: 1px solid #000;\"><tr><td>Total Sensed</td><td>${totalCount.length}</td></tr></tbody></table>`;\nlet chatMessage = game.messages.get(args[0].itemCardId);\nlet content = duplicate(chatMessage.content);\nlet searchString = /<div class=\"midi-qol-saves-display\">[\\s\\S]*<div class=\"end-midi-qol-saves-display\">/g;\nlet replaceString = `<div class=\"midi-qol-saves-display\"><div class=\"end-midi-qol-saves-display\">${the_message}`;\ncontent = content.replace(searchString, replaceString);\nchatMessage.update({ content: content });\nawait wait(300);\nui.chat.scrollBottom();\n\n\n\n\n//Last Updated: 8/21/2023\n//Author: EskieMoh#2969\n\nconst aoeDistance = 60;\n\nconst captureArea = {\n    x: token.x+(canvas.grid.size*token.document.width)/2,\n    y: token.y+(canvas.grid.size*token.document.width)/2, \n    scene: canvas.scene, \n    radius: aoeDistance/canvas.scene.data.gridDistance * canvas.grid.size\n};\n\nconst containedTokens = warpgate.crosshairs.collect(captureArea, 'Token')\n\nconsole.log(containedTokens)\n\nlet targets2 = Array.from(containedTokens);\n\nnew Sequence()\n\n.effect()\n.file(\"jb2a.detect_magic.circle.yellow\")\n.atLocation(token)\n.size(25, {gridUnits:true})\n.fadeOut(4000)\n.opacity(0.75)\n.belowTokens()\n\n.play()\n\ntargets2.forEach(target => {  \n\nif (target.data.name !== token.data.name){\n\nconst distance = Math.sqrt(\n  Math.pow(target.x - token.x, 2) + Math.pow(target.y - token.y, 2)\n);\n\nconst gridDistance = distance/canvas.grid.size\n\nnew Sequence()\n\n.effect()\n.delay(gridDistance*125)\n.file(\"jb2a.detect_magic.circle.yellow\")\n.atLocation(target)\n.scaleToObject(2.5)\n.mask(target)\n\n.wait(500)\n\n.effect()\n.delay(gridDistance*125)\n.from(target)\n.belowTokens()\n.attachTo(target, {locale: true})\n.scaleToObject(target.data.scale)\n.spriteRotation(target.rotation*-1)\n.filter(\"Glow\", { color: 0xFFFFFF, distance: 15 })\n.duration(3000)\n.fadeIn(500, {delay:0})\n.fadeOut(1000, {ease: \"easeInCubic\"})\n.zIndex(0.2)\n.opacity(1)\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"fiend\" || \"celestial\" || \"undead\";\n})\n\n//Fiend Effect\n.effect()\n.delay(gridDistance*125)\n.from(target)\n.belowTokens()\n.attachTo(target, {locale: true})\n.scaleToObject(1, {considerTokenScale:true})\n.spriteRotation(target.rotation*-1)\n.filter(\"Glow\", { color: 0x911a1a, distance: 15 })\n.duration(30000)\n.fadeIn(2000, {delay:1000})\n.fadeOut(3500, {ease: \"easeInSine\"})\n.opacity(0.8)\n.zIndex(0.1)\n.loopProperty(\"alphaFilter\", \"alpha\", { values: [0.5, 0], duration: 1000, pingPong: true ,delay:500})\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"fiend\";\n})\n\n.effect()\n.delay(gridDistance*125)\n.file(\"jb2a.extras.tmfx.outflow.circle.01\")\n.attachTo(target, {locale: true})\n.scaleToObject(1.5, {considerTokenScale:false})\n.randomRotation()\n.duration(30000)\n.fadeIn(5000, {delay:0})\n.fadeOut(3500, {ease: \"easeInSine\"})\n.scaleIn(0, 3500, {ease: \"easeInOutCubic\"})\n.tint(0x870101)\n.opacity(0.5)\n.belowTokens()\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"fiend\";\n})\n//\n\n//Celestial Effect\n.effect()\n.delay(gridDistance*125)\n.from(target)\n.belowTokens()\n.attachTo(target, {locale: true})\n.scaleToObject(1, {considerTokenScale:true})\n.spriteRotation(target.rotation*-1)\n.filter(\"Glow\", { color: 0xffd000, distance: 15 })\n.duration(30000)\n.fadeIn(2000, {delay:1000})\n.fadeOut(3500, {ease: \"easeInSine\"})\n.opacity(0.5)\n.zIndex(0.1)\n.loopProperty(\"alphaFilter\", \"alpha\", { values: [0.5, 0], duration: 1000, pingPong: true ,delay:500})\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"celestial\";\n})\n\n.effect()\n.delay(gridDistance*125)\n.file(\"jb2a.extras.tmfx.outflow.circle.01\")\n.attachTo(target, {locale: true})\n.scaleToObject(1.5, {considerTokenScale:false})\n.randomRotation()\n.duration(30000)\n.fadeIn(5000, {delay:0})\n.fadeOut(3500, {ease: \"easeInSine\"})\n.scaleIn(0, 3500, {ease: \"easeInOutCubic\"})\n.tint(0xf3d877)\n.opacity(0.75)\n.belowTokens()\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"celestial\";\n})\n//\n\n//Undead Effect\n.effect()\n.delay(gridDistance*125)\n.from(target)\n.belowTokens()\n.attachTo(target, {locale: true})\n.scaleToObject(1, {considerTokenScale:true})\n.spriteRotation(target.rotation*-1)\n.filter(\"Glow\", { color: 0x111111, distance: 15 })\n.duration(30000)\n.fadeIn(2000, {delay:1000})\n.fadeOut(3500, {ease: \"easeInSine\"})\n.opacity(0.8)\n.zIndex(0.1)\n.loopProperty(\"alphaFilter\", \"alpha\", { values: [0.5, 0], duration: 1000, pingPong: true ,delay:500})\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"undead\";\n})\n\n.effect()\n.delay(gridDistance*125)\n.file(\"jb2a.extras.tmfx.outflow.circle.01\")\n.attachTo(target, {locale: true})\n.scaleToObject(1.5, {considerTokenScale:false})\n.randomRotation()\n.duration(30000)\n.fadeIn(5000, {delay:0})\n.fadeOut(3500, {ease: \"easeInSine\"})\n.scaleIn(0, 3500, {ease: \"easeInOutCubic\"})\n.tint(0x121212)\n.opacity(0.5)\n.belowTokens()\n.playIf(() => {\nreturn target.actor.system.details.type.value == \"undead\";\n})\n//\n\n.play()\n}\n})",
        "author": "roRDywD19pu2VxlC",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "scene-packer": {
      "hash": "067e4a445b77456ea66dcb81f7adc5841003afec",
      "sourceId": "Actor.Kog50Edwvg7saBS5.Item.JUhRl7XjXwwHPLQS"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "rollOther": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "ignoreTotalCover": false,
      "noConcentrationCheck": false,
      "confirmTargets": "never"
    },
    "core": {},
    "dae": {
      "macro": {
        "command": "",
        "name": "Divine Sense",
        "img": "icons/creatures/eyes/human-single-blue.webp",
        "type": "script",
        "scope": "global",
        "author": "roRDywD19pu2VxlC",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": "dnd5e",
          "systemVersion": "4.1.2",
          "coreVersion": "12.331",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    },
    "autoanimations": {
      "id": "c12a3817-5ba3-4a91-8dc6-84b54a3bca6e",
      "label": "Divine Sense",
      "levels3d": {
        "type": "explosion",
        "data": {
          "color01": "#FFFFFF",
          "color02": "#FFFFFF",
          "spritePath": "modules/levels-3d-preview/assets/particles/dust.png"
        },
        "sound": {
          "enable": false
        },
        "secondary": {
          "enable": false,
          "data": {
            "color01": "#FFFFFF",
            "color02": "#FFFFFF",
            "spritePath": "modules/levels-3d-preview/assets/particles/dust.png"
          }
        }
      },
      "macro": {
        "enable": false
      },
      "meleeSwitch": {
        "video": {
          "dbSection": "range",
          "menuType": "weapon",
          "animation": "arrow",
          "variant": "regular",
          "color": "regular"
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "detect": "automatic",
          "range": 2,
          "returning": false,
          "switchType": "on"
        }
      },
      "menu": "melee",
      "primary": {
        "video": {
          "dbSection": "melee",
          "menuType": "weapon",
          "animation": "club",
          "variant": "01",
          "color": "white",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "isWait": false,
          "opacity": 1,
          "playbackRate": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "secondary": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": true,
          "isWait": false,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1.5,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "soundOnly": {
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        }
      },
      "source": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "isWait": true,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "target": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "opacity": 1,
          "persistent": false,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "unbindAlpha": false,
          "unbindVisibility": false,
          "zIndex": 1
        }
      },
      "isEnabled": false,
      "isCustomized": false,
      "fromAmmo": false,
      "version": 5
    },
    "walledtemplates": {
      "wallsBlock": "globalDefault",
      "wallRestriction": "globalDefault"
    },
    "LocknKey": {
      "IDKeysFlag": "",
      "RemoveKeyonUseFlag": false,
      "LPFormulaFlag": "",
      "LPFormulaOverrideFlag": false,
      "LBFormulaFlag": "",
      "LBFormulaOverrideFlag": false,
      "ReplacementItemFlag": ""
    },
    "dnd5e": {
      "riders": {
        "activity": [],
        "effect": []
      },
      "migratedUses": 1
    }
  },
  "effects": [],
  "img": "icons/creatures/eyes/human-single-blue.webp",
  "folder": "Rr6FA73OqipfG65M",
  "_id": "M3DpNREdzQS2hrk4",
  "_key": "!items!M3DpNREdzQS2hrk4"
}
