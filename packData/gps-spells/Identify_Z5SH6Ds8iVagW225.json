{
  "name": "Identify",
  "type": "spell",
  "img": "icons/magic/perception/eye-ringed-green.webp",
  "system": {
    "description": {
      "value": "",
      "chat": ""
    },
    "source": {
      "custom": "1.0.25",
      "book": "",
      "page": "",
      "license": "",
      "revision": 1,
      "rules": "2014"
    },
    "activation": {
      "type": "action",
      "condition": "",
      "value": 1
    },
    "duration": {
      "value": "",
      "units": "inst"
    },
    "target": {
      "affects": {
        "choice": false,
        "count": "",
        "type": ""
      },
      "template": {
        "units": "m",
        "contiguous": false,
        "type": ""
      }
    },
    "range": {
      "units": "touch",
      "special": ""
    },
    "uses": {
      "max": "",
      "recovery": [],
      "spent": 0
    },
    "ability": "",
    "level": 1,
    "school": "div",
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 100,
      "supply": 0
    },
    "properties": [
      "vocal",
      "somatic",
      "material",
      "ritual"
    ],
    "activities": {
      "dnd5eactivity000": {
        "_id": "dnd5eactivity000",
        "type": "utility",
        "activation": {
          "type": "action",
          "value": null,
          "override": false
        },
        "consumption": {
          "targets": [],
          "scaling": {
            "allowed": false,
            "max": ""
          },
          "spellSlot": true
        },
        "description": {
          "chatFlavor": ""
        },
        "duration": {
          "units": "inst",
          "concentration": false,
          "override": false
        },
        "effects": [],
        "range": {
          "override": false,
          "units": "self"
        },
        "target": {
          "prompt": true,
          "template": {
            "contiguous": false,
            "units": "ft"
          },
          "affects": {
            "choice": false
          },
          "override": false
        },
        "uses": {
          "spent": 0,
          "max": "",
          "recovery": []
        },
        "roll": {
          "formula": "",
          "name": "",
          "prompt": false,
          "visible": false
        },
        "sort": 0,
        "name": "",
        "useConditionText": "",
        "useConditionReason": "",
        "effectConditionText": "",
        "macroData": {
          "name": "",
          "command": ""
        },
        "ignoreTraits": {
          "idi": false,
          "idr": false,
          "idv": false,
          "ida": false,
          "idm": false
        },
        "midiProperties": {
          "ignoreTraits": [],
          "triggeredActivityId": "none",
          "triggeredActivityConditionText": "",
          "triggeredActivityTargets": "targets",
          "triggeredActivityRollAs": "self",
          "autoConsume": false,
          "forceConsumeDialog": "default",
          "forceRollDialog": "default",
          "forceDamageDialog": "default",
          "confirmTargets": "default",
          "autoTargetType": "any",
          "autoTargetAction": "default",
          "automationOnly": false,
          "otherActivityCompatible": true,
          "otherActivityAsParentType": true,
          "identifier": "",
          "displayActivityName": false,
          "rollMode": "default",
          "chooseEffects": false,
          "toggleEffect": false,
          "ignoreFullCover": false,
          "removeChatButtons": "default",
          "magicEffect": false,
          "magicDamage": false,
          "noConcentrationCheck": false,
          "autoCEEffects": "default"
        },
        "isOverTimeFlag": false,
        "overTimeProperties": {
          "saveRemoves": true,
          "preRemoveConditionText": "",
          "postRemoveConditionText": ""
        },
        "otherActivityId": "none",
        "otherActivityAsParentType": true
      }
    },
    "identifier": "identify",
    "method": "spell",
    "prepared": 1
  },
  "effects": [],
  "folder": null,
  "flags": {
    "ddbimporter": {
      "id": 138343,
      "definitionId": 2152,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "classSpell",
        "class": "Wizard",
        "level": 6,
        "characterClassId": 129265972,
        "spellLevel": 1,
        "ability": "int",
        "mod": 3,
        "dc": 14,
        "cantripBoost": false,
        "overrideDC": false,
        "id": 138343,
        "entityTypeId": 435869154,
        "healingBoost": 0,
        "usesSpellSlot": true
      },
      "originalName": "Identify",
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 252,
          "sourceType": 1
        }
      ],
      "tags": [
        "Detection"
      ],
      "version": "3.4.19",
      "effectsApplied": true,
      "importId": "kD5jKJ2VZdbe0WwE",
      "overrideId": "NONE",
      "ignoreIcon": false,
      "ignoreItemImport": true,
      "ignoreItemForChrisPremades": false,
      "retainResourceConsumption": false
    },
    "midiProperties": {
      "magicdam": true,
      "magiceffect": true,
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "rollOther": false,
      "critOther": false,
      "offHandWeapon": false,
      "concentration": false,
      "toggleEffect": false,
      "ignoreTotalCover": false,
      "noConcentrationCheck": false,
      "confirmTargets": "never",
      "idr": false,
      "idi": false,
      "idv": false,
      "ida": false
    },
    "spell-class-filter-for-5e": {
      "parentClass": "wizard"
    },
    "scene-packer": {
      "hash": "9781a13e113a47b0a2ba5937fcc1a911c63e6c08",
      "sourceId": "Actor.edtGqNIYfHYowUUr.Item.HBZ7dcOKHDAkAGjf"
    },
    "itemacro": {
      "macro": {
        "name": "Identify",
        "type": "script",
        "scope": "global",
        "command": "let dialog = await new Dialog({\n  title: \"Identify\",\n  content: `\n    <p>Would you like to identify an item? (Drag it to the box below!)</p>\n    <form>\n      <div class=\"form-group\">\n        <div class=\"form-fields\">\n          <input type=\"text\" placeholder=\"Drag item here...\" id=\"identify\" readonly>\n          <div style=\"width: 50px; height: 50px; display: inline-block;\">\n            <img id=\"itemImage\" src=\"\" alt=\"Item Image\" style=\"max-width: 100%; max-height: 100%; display: none;\">\n          </div>\n          <span id=\"itemName\" style=\"margin-left: 10px;\"></span>\n        </div>\n      </div>\n    </form>`,\n  buttons: {\n    identify: {\n      label: \"Identify\",\n      callback: async (html) => {\n        const itemUuid = html[0].querySelector(\"#identify\").value;\n        const ForienIdentification = game.modules.get('forien-unidentified-items');\n        const ArchonIdentification = game.modules.get('archon');\n        const findItem = await fromUuid(itemUuid);\n        const findItemQuantity = findItem?.system?.quantity;\n\n\t\t// Check if the item exists\n        if (!findItem) {\n          ui.notifications.error(\"Item not found\");\n          return;\n        }\n\n\t// Identify the item using available modules based on item flags\n        let identified = false;\n\n\t\t// Check if the ForienIdentification module is installed, active, and no \"archon.uuid\" flag present\n        if (ForienIdentification && ForienIdentification.active && !findItem?.flags?.archon?.uuid) {\n          identified = await ForienIdentification.api.identify(findItem);\n          if (identified) {\n            handleIdentificationSuccess(itemUuid, findItemQuantity);\n            return;\n          }\n        }\n\n\t\t// Check if the ArchonIdentification module is installed, active, and no \"forien-unidentified-items\" flag present\n        if (ArchonIdentification && ArchonIdentification.active && !findItem?.flags?.[\"forien-unidentified-items\"]?.origData && !identified) {\n          identified = await ArchonIdentification.Archon.reveal(findItem);\n          if (identified) {\n            handleIdentificationSuccess(itemUuid, findItemQuantity);\n            return;\n          }\n        }\n\t\t// No active module found to identify the item\n        ui.notifications.error(\"No active module found to identify the item\");\n      }\n    },\n    cancel: {\n      label: \"Cancel\",\n      callback: () => false\n    }\n  },\n  default: \"Cancel\",\n render: (html) => {\n  const inputField = html.find(\"#identify\")[0];\n  const itemImage = html.find(\"#itemImage\")[0];\n  const itemNameSpan = html.find(\"#itemName\")[0];\n  const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\n  // Event listener for drop\n  const handleDrop = async (e) => {\n\te.preventDefault();\n\tconst data = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n\tif (data.type !== \"Item\") return;\n\tinputField.value = data.uuid;\n\n\tconst item = await fromUuid(data.uuid);\n\tif (item && item.img) {\n\t  itemImage.src = item.img;\n\t  itemImage.style.display = \"block\";\n\t  itemImage.style.margin = \"auto\";\n\t  itemImage.style.display = \"block\";\n\t  itemImage.style.maxWidth = \"100%\";\n\t  inputField.style.display = \"none\";\n\t  itemNameSpan.textContent = item.name;\n\t}\n  };\n\n  if (isFirefox) {\n\tinputField.addEventListener('dragover', (e) => {\n\t  e.preventDefault();\n\t});\n\n\tinputField.addEventListener('drop', handleDrop);\n  } else {\n\tinputField.addEventListener(\"drop\", handleDrop);\n\t}\n }\n}).render(true);\n\nasync function handleIdentificationSuccess(itemUuid, findItemQuantity) {\n  const findItemNew = await fromUuid(itemUuid);\n  const findItemNewQuantity = findItemNew?.system?.quantity;\n\n  // Update the item quantity if it changed during identification\n  if (findItemQuantity !== findItemNewQuantity) {\n    await findItemNew.update({ 'system.quantity': findItemQuantity });\n  }\n\n  const itemName = findItemNew.name;\n  const itemQuantity = findItemNew.system.quantity || 1;\n  const itemText = itemQuantity === 1 ? `${itemQuantity} <a class=\"open-item-sheet\" data-item-id=\"${findItemNew.id}\">${findItemNew.name}</a> item` : `${itemQuantity} <a class=\"open-item-sheet\" data-item-id=\"${findItemNew.id}\">${findItemNew.name}</a> items`;\n\n  const content = `<p>You identified ${itemText}!</p>`;\n\n  const dialogSuccess = new Dialog({\n    title: \"Identified\",\n    content: content,\n    buttons: {\n      okay: {\n        label: \"Okay\"\n      }\n    },\n    default: \"okay\",\n    render: (html) => {\n      html.find('.open-item-sheet').click((ev) => {\n        findItemNew.sheet.render(true);\n      });\n    }\n  });\n\n  dialogSuccess.render(true);\n}",
        "author": "roRDywD19pu2VxlC",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "",
      "rollAttackPerTarget": "default",
      "itemCondition": "",
      "effectCondition": "",
      "AoETargetType": "any",
      "autoTarget": "default",
      "removeAttackDamageButtons": "default",
      "reactionCondition": "",
      "otherCondition": ""
    },
    "character-actions-list-5e": {
      "filter-override": true
    },
    "core": {},
    "rest-recovery": {
      "data": {
        "recovery": {
          "enabled": false
        }
      }
    },
    "walledtemplates": {
      "wallsBlock": "globalDefault",
      "wallRestriction": "globalDefault"
    },
    "dae": {
      "macro": {
        "name": "Identify",
        "img": "icons/magic/perception/eye-ringed-green.webp",
        "type": "script",
        "scope": "global",
        "command": "",
        "author": "roRDywD19pu2VxlC",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": "dnd5e",
          "systemVersion": "4.1.2",
          "coreVersion": "12.331",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    },
    "tidy5e-sheet-kgar": {
      "action-filter-override": true
    },
    "LocknKey": {
      "IDKeysFlag": "",
      "RemoveKeyonUseFlag": false,
      "LPFormulaFlag": "",
      "LPFormulaOverrideFlag": false,
      "LBFormulaFlag": "",
      "LBFormulaOverrideFlag": false,
      "ReplacementItemFlag": ""
    },
    "dnd5e": {
      "riders": {
        "activity": [],
        "effect": []
      }
    },
    "chris-premades": {
      "info": {
        "gambit": {
          "name": "Identify",
          "version": "0.1.2"
        },
        "source": "GPS"
      }
    },
    "tidy5e-sheet": {
      "action-filter-override": true,
      "section": "",
      "actionSection": ""
    },
    "gambits-premades": {
      "gpsUuid": "2cc1f50d-cdb8-4f17-a532-2532f74440ae"
    }
  },
  "_id": "Z5SH6Ds8iVagW225",
  "_key": "!items!Z5SH6Ds8iVagW225"
}
