{
  "name": "Spirit Balm",
  "type": "spell",
  "img": "icons/magic/holy/prayer-hands-glowing-yellow.webp",
  "system": {
    "description": {
      "value": "<p><em>This item comes from Kobold Press' Deep Magic 2, purchase at </em><a href=\"https://koboldpress.com/kpstore/product/deep-magic-volume-2-foundry/\" title=\"Deep Magic 2\"><em>https://koboldpress.com/kpstore/product/deep-magic-volume-2-foundry/</em></a></p>",
      "chat": ""
    },
    "source": {
      "custom": "0.5.40",
      "book": "Deep Magic Vol. 2, page 225",
      "page": "",
      "license": "",
      "revision": 1,
      "rules": "2014"
    },
    "activation": {
      "type": "action",
      "condition": "",
      "value": 1
    },
    "duration": {
      "value": "",
      "units": "inst"
    },
    "target": {
      "affects": {
        "type": "ally",
        "count": "",
        "choice": false
      },
      "template": {
        "units": "m",
        "contiguous": false
      }
    },
    "range": {
      "value": "30",
      "units": "ft"
    },
    "uses": {
      "max": "",
      "recovery": [],
      "spent": 0
    },
    "ability": "",
    "level": 2,
    "school": "con",
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "properties": [
      "vocal",
      "somatic",
      "mgc"
    ],
    "activities": {
      "dnd5eactivity000": {
        "_id": "dnd5eactivity000",
        "type": "utility",
        "activation": {
          "type": "action",
          "value": null,
          "override": false
        },
        "consumption": {
          "targets": [],
          "scaling": {
            "allowed": false,
            "max": ""
          },
          "spellSlot": true
        },
        "description": {
          "chatFlavor": ""
        },
        "duration": {
          "units": "inst",
          "concentration": false,
          "override": false
        },
        "effects": [],
        "range": {
          "override": false,
          "units": "self"
        },
        "target": {
          "prompt": true,
          "template": {
            "contiguous": false,
            "units": "ft"
          },
          "affects": {
            "choice": false
          },
          "override": false
        },
        "uses": {
          "spent": 0,
          "max": "",
          "recovery": []
        },
        "roll": {
          "formula": "",
          "name": "",
          "prompt": false,
          "visible": false
        },
        "sort": 0,
        "useConditionText": "",
        "useConditionReason": "",
        "effectConditionText": "",
        "macroData": {
          "name": "",
          "command": ""
        },
        "ignoreTraits": {
          "idi": false,
          "idr": false,
          "idv": false,
          "ida": false,
          "idm": false
        },
        "midiProperties": {
          "ignoreTraits": [],
          "triggeredActivityId": "none",
          "triggeredActivityConditionText": "",
          "triggeredActivityTargets": "targets",
          "triggeredActivityRollAs": "self",
          "autoConsume": false,
          "forceConsumeDialog": "default",
          "forceRollDialog": "default",
          "forceDamageDialog": "default",
          "confirmTargets": "default",
          "autoTargetType": "any",
          "autoTargetAction": "default",
          "automationOnly": false,
          "otherActivityCompatible": true,
          "otherActivityAsParentType": true,
          "identifier": "",
          "displayActivityName": false,
          "rollMode": "default",
          "chooseEffects": false,
          "toggleEffect": false,
          "ignoreFullCover": false,
          "removeChatButtons": "default",
          "magicEffect": false,
          "magicDamage": false,
          "noConcentrationCheck": false,
          "autoCEEffects": "default"
        },
        "isOverTimeFlag": false,
        "overTimeProperties": {
          "saveRemoves": true,
          "preRemoveConditionText": "",
          "postRemoveConditionText": ""
        },
        "otherActivityId": "none",
        "otherActivityAsParentType": true
      }
    },
    "identifier": "spirit-balm",
    "method": "spell",
    "prepared": 0
  },
  "effects": [],
  "flags": {
    "midi-qol": {
      "effectActivation": false,
      "rollAttackPerTarget": "default",
      "removeAttackDamageButtons": "default",
      "itemCondition": "",
      "effectCondition": "",
      "onUseMacroName": "[postPreambleComplete]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "rollOther": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "ignoreTotalCover": false,
      "confirmTargets": "default",
      "noConcentrationCheck": false,
      "idr": false,
      "idi": false,
      "idv": false,
      "ida": false
    },
    "dnd5e": {
      "riders": {
        "activity": [],
        "effect": []
      }
    },
    "core": {},
    "dae": {
      "macro": {
        "name": "Spirit Balm",
        "img": "icons/magic/holy/prayer-hands-glowing-yellow.webp",
        "type": "script",
        "scope": "global",
        "command": "if(args[0].macroPass === \"postPreambleComplete\") {\n    let targets = workflow.targets;\n    let castData = workflow.castData.castLevel;\n    let spellMod = actor.system.attributes.spellmod;\n    if (!targets.has(token)) {\n        targets.add(token);\n    }\n    if(targets.size > castData) {\n        workflow.aborted = true;\n        if(macroItem.system.uses.max) await macroItem.update({\"system.uses.value\": macroItem.system.uses.value + 1});\n        return ui.notifications.warn(`You have selected ${workflow.targets.size} targets but can only select ${castData} targets`);\n    }\n\n    let damageRoll = await new CONFIG.Dice.DamageRoll(`${spellMod}`).evaluate();\n\n    let charmedCount = 0;\n    let frightenedCount = 0;\n\n    for (let target of targets) {\n        if(target.document.hasStatusEffect(\"charmed\")) {\n            charmedCount++;\n        }\n        if(target.document.hasStatusEffect(\"frightened\")) {\n            frightenedCount++;\n        }\n\n        const itemData = {\n            name: \"Spirit Balm - Healing\",\n            type: \"feat\",\n            img: macroItem.img\n        }\n\n        new MidiQOL.DamageOnlyWorkflow(actor, token, damageRoll.total, \"healing\", target ? [target] : [], damageRoll, {itemData: itemData});\n    }\n\n    if (charmedCount === 0 && frightenedCount === 0) return;\n\n    let buttons = [];\n    if (charmedCount > 0) {\n        buttons.push({\n            action: \"Charmed\",\n            label: `Charmed (${charmedCount})`,\n            callback: async (event, button, dialog) => {\n                for (let target of targets) {\n                    await game.gps.socket.executeAsGM(\"gmToggleStatus\", {tokenUuid: `${target.document.uuid}`, status: \"charmed\", active: false });\n                }\n            }\n        });\n    }\n\n    if (frightenedCount > 0) {\n        buttons.push({\n            action: \"Frightened\",\n            label: `Frightened (${frightenedCount})`,\n            callback: async (event, button, dialog) => {\n                for (let target of targets) {\n                    await game.gps.socket.executeAsGM(\"gmToggleStatus\", {tokenUuid: `${target.document.uuid}`, status: \"frightened\", active: false });\n                }\n            }\n        });\n    }\n\n    await foundry.applications.api.DialogV2.wait({\n        window: { title: 'Spirit Balm' },\n        content: `\n            <div class=\"gps-dialog-container\">\n                <div class=\"gps-dialog-section\">\n                    <div class=\"gps-dialog-content\">\n                        <div>\n                            <div class=\"gps-dialog-flex\">\n                                <p class=\"gps-dialog-paragraph\">You each regain ${spellMod} hit points, select a condition to remove below.</p>\n                                <div id=\"image-container\" class=\"gps-dialog-image-container\">\n                                    <img src=\"${macroItem.img}\" class=\"gps-dialog-image\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,\n        buttons: buttons,\n        close: async (event, dialog) => {\n            return;\n        }, rejectClose:false\n    });\n}",
        "author": "roRDywD19pu2VxlC",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "coreVersion": "12.331",
          "systemId": "dnd5e",
          "systemVersion": "3.3.1",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    }
  },
  "folder": null,
  "_id": "7lkAfOSVCDWeZe22",
  "_key": "!items!7lkAfOSVCDWeZe22"
}
