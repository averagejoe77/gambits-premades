name: Release

on:
  release:
    types: [published]   # runs after you publish a release (not when you just create a draft)

permissions:
  contents: write

jobs:
  build-and-attach:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm ci

      # Build packs from packData -> packs
      - name: Compile packs (packData -> packs)
        run: npm run packData

      # Create Foundry-clean ZIP from repo
      - name: Create base ZIP (from repo files)
        run: |
          git archive --format=zip --output module.zip HEAD

      # Append packs to the zip
      - name: Add packs/ to ZIP
        run: |
          if [ -d "packs" ]; then
            sudo apt-get update && sudo apt-get install -y zip
            zip -r module.zip packs
          fi

      # Attach artifacts to the release that triggered this workflow
      - name: Update Release with Files
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          replacesArtifacts: true
          makeLatest: true
          name: ${{ github.event.release.name }}
          tag:  ${{ github.event.release.tag_name }}
          artifacts: "module.zip,module.json"
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ github.event.release.body }}

      # Compute plain version
      - name: Set VERSION/URLs for Foundry
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "FOUNDRY_MANIFEST=https://github.com/${{ github.repository }}/releases/latest/download/module.json" >> $GITHUB_ENV
          echo "FOUNDRY_DOWNLOAD=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.zip" >> $GITHUB_ENV

      # Publish to Foundry
      - name: Release Foundry Package
        if: ${{ success() }}
        env:
          FOUNDRY_API_TOKEN: ${{ secrets.FOUNDRY_API_TOKEN }}
        run: |
          curl -X POST "https://foundryvtt.com/_api/packages/release_version" \
            -H "Content-Type: application/json" \
            -H "Authorization: $FOUNDRY_API_TOKEN" \
            -d '{
              "id": "gambits-premades",
              "release": {
                "version": "'"${VERSION}"'",
                "manifest": "'"${FOUNDRY_MANIFEST}"'",
                "download": "'"${FOUNDRY_DOWNLOAD}"'",
                "notes": "https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}",
                "compatibility": { "minimum": "13.346", "verified": "13.348", "maximum": "13" }
              }
            }'

      # Discord posts
      - name: Post to Midi Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_MIDI_WEBHOOK }}
        run: |
          VERSION=$(node -p "require('./module.json').version")
          RELEASE_NOTES=$(sed ':a;N;$!ba;s/\n/\\n/g' release_notes.txt)
          curl -H "Content-Type: application/json" \
               -d '{
                 "embeds": [{
                   "title": "Gambit'\''s Premades Release: '$VERSION'",
                   "description": "[Gambits Lounge Discord](https://discord.gg/NVpRhRPdE4)\n**To support my continued work on this module!**\n[Patreon ❤️](https://www.patreon.com/GambitsLounge) | [Ko-fi ❤️](https://ko-fi.com/gambit07)\n\n'"$RELEASE_NOTES"'\n\nCheck it out through the Foundry package manager or the link below:\n<https://github.com/gambit07/gambits-premades/releases/tag/'"$VERSION"'>",
                   "image": {
                     "url": "https://avatars.githubusercontent.com/u/4236874?s=400&u=05d3718580ef87ea13467131a0c1fcaf4956630d&v=4"
                   }
                 }]
               }' $DISCORD_WEBHOOK

      - name: Post to GPS Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_GPS_WEBHOOK }}
        run: |
          VERSION=$(node -p "require('./module.json').version")
          RELEASE_NOTES=$(sed ':a;N;$!ba;s/\n/\\n/g' release_notes.txt)
          curl -H "Content-Type: application/json" \
               -d '{
                 "embeds": [{
                   "title": "Gambit'\''s Premades Release: '$VERSION'",
                   "description": "**To support my continued work on this module!**\n[Patreon ❤️](https://www.patreon.com/GambitsLounge) | [Ko-fi ❤️](https://ko-fi.com/gambit07)\n\n'"$RELEASE_NOTES"'\n\nCheck it out through the Foundry package manager or the link below:\n<https://github.com/gambit07/gambits-premades/releases/tag/'"$VERSION"'>",
                   "image": {
                     "url": "https://avatars.githubusercontent.com/u/4236874?s=400&u=05d3718580ef87ea13467131a0c1fcaf4956630d&v=4"
                   }
                 }]
               }' $DISCORD_WEBHOOK